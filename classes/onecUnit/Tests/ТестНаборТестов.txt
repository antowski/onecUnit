
ѕерем м–езультат;
ѕерем мѕроверить;

ѕроцедура  онструктор()
	мѕроверить = —оздатьќбъект("”тверждени€");
 онецѕроцедуры //  онструктор

ѕроцедура ѕроверить ол«апущеноѕровалено(п–езультат, п ол«апущено, п олѕровалено)
	мѕроверить.–авно(п ол«апущено, п–езультат.ѕолучить ол«апущено());
	мѕроверить.–авно(п олѕровалено, п–езультат.ѕолучить олѕровалено());	
 онецѕроцедуры // ѕроверить ол«апущеноѕровалено

ѕроцедура тестЌабор“естов() Ёкспорт
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	Ќабор“естов.ƒобавить“ест( Ќабор“естов.—оздать“ест("‘икстура.Ѕыл¬ыполнен", "“естовыйћетод") );
	Ќабор“естов.ƒобавить“ест( Ќабор“естов.—оздать“ест("‘икстура.Ѕыл¬ыполнен", "—ломанный“ест") );
	
	–езультат = —оздатьќбъект("–езультат“еста");
	Ќабор“естов.¬ыполнить(–езультат);
	
	//я()._¬ыбросить»скл("—еверное буги");
	
	ѕроверить ол«апущеноѕровалено(–езультат, 2, 1);
	
 онецѕроцедуры // тестЌабор“естов

ѕроцедура тестќшибка—оздани€“еста_≈сли ласса“естаЌе—уществует() Ёкспорт
	
	»м€Ќесуществующего ласса = "»м€Ќесуществующего ласса";
	
	сзѕараметры = —оздатьќбъект("—писок«начений");
	сзѕараметры.ƒобавить«начение(»м€Ќесуществующего ласса);
	сзѕараметры.ƒобавить«начение("Ќесуществующийћетод");
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	ќжидаема€ќшибка = "Ќе обнаружен класс '" + »м€Ќесуществующего ласса + "'";
	мѕроверить.¬ыбрасывает»сключение(Ќабор“естов, "—оздать“ест", сзѕараметры, ќжидаема€ќшибка);
	
 онецѕроцедуры // тестќшибка—оздани€“еста_≈сли ласса“естаЌе—уществует

ѕроцедура тестќшибка—оздани€“еста_≈сли“естовогоћетодаЌе—уществует() Ёкспорт
	
	»сключение¬ыброшено = 0;
	
	»м€“естового ласса = "‘икстура.Ѕыл¬ыполнен";
	»м€“естовогоћетода = "Ќесуществующийћетод";
	
	сзѕараметры = —оздатьќбъект("—писок«начений");
	сзѕараметры.ƒобавить«начение(»м€“естового ласса);
	сзѕараметры.ƒобавить«начение(»м€“естовогоћетода);
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	ќжидаема€ќшибка = "Ќе обнаружен метод '" + »м€“естовогоћетода + "' в классе '" + »м€“естового ласса + "'";
	мѕроверить.¬ыбрасывает»сключение(Ќабор“естов, "—оздать“ест", сзѕараметры, ќжидаема€ќшибка);
	
 онецѕроцедуры // тестќшибка—оздани€“еста_≈сли“естовогоћетодаЌе—уществует

ѕроцедура тестќшибка«агрузки“естов_ ласса“естового—луча€Ќе—уществует() Ёкспорт
	
	»м€Ќесуществующего ласса = "»м€Ќесуществующего ласса";
	
	сзѕараметры = —оздатьќбъект("—писок«начений");
	сзѕараметры.ƒобавить«начение(»м€Ќесуществующего ласса);
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	
	ќжидаема€ќшибка = "Ќе обнаружен класс '" + »м€Ќесуществующего ласса + "'";
	мѕроверить.¬ыбрасывает»сключение(Ќабор“естов, "«агрузить»з“естового—луча€", сзѕараметры, ќжидаема€ќшибка);
	
 онецѕроцедуры // тестќшибка«агрузки“естов_ ласса“естового—луча€Ќе—уществует

ѕроцедура тестќшибка«агрузки“естов_“естовый лассЌеявл€етс€“естовым—лучаем() Ёкспорт
	
	»м€ ласса = "‘икстура.ћатематика";
	
	сзѕараметры = —оздатьќбъект("—писок«начений");
	сзѕараметры.ƒобавить«начение(»м€ ласса);
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	
	ќжидаема€ќшибка = " ласс '" + »м€ ласса + "' не €вл€етс€ наследником класса “естовый—лучай";
	мѕроверить.¬ыбрасывает»сключение(Ќабор“естов, "«агрузить»з“естового—луча€", сзѕараметры, ќжидаема€ќшибка);
	
 онецѕроцедуры // тестќшибка«агрузки“естов_ ласса“естового—луча€Ќе—уществует

ѕроцедура тестќшибка«агрузки“естов_ЌетЌиќдного“естовогоћетода() Ёкспорт
	
	»м€ ласса = "‘икстура.“естовый—лучайЅез“естовыхћетодов";
	
	сзѕараметры = —оздатьќбъект("—писок«начений");
	сзѕараметры.ƒобавить«начение(»м€ ласса);
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	
	ќжидаема€ќшибка = " ласс '" + »м€ ласса + "' не содержит ни одного тестового метода";
	мѕроверить.¬ыбрасывает»сключение(Ќабор“естов, "«агрузить»з“естового—луча€", сзѕараметры, ќжидаема€ќшибка);
	
 онецѕроцедуры // тестќшибка«агрузки“естов_ЌетЌиќдного“естовогоћетода

ѕроцедура тест”спешное—озданиеЌабораѕо»мени“естового—луча€() Ёкспорт
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	Ќабор“естов.«агрузить»з“естового—луча€("‘икстура.“естовый—лучай—ƒвум€”спешными“естами");
	
	–езультат = —оздатьќбъект("–езультат“еста");
	Ќабор“естов.¬ыполнить(–езультат);
	
	ѕроверить ол«апущеноѕровалено(–езультат, 2, 0);
	
 онецѕроцедуры // тест”спешное—озданиеЌабораѕо»мени“естового—луча€

ѕроцедура тест»м€Ќабора“естов—овпадает—»менем“естового—луча€() Ёкспорт
	
	»м€“естового—луча€ = "‘икстура.“естовый—лучай—ƒвум€”спешными“естами";
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	Ќабор“естов.«агрузить»з“естового—луча€(»м€“естового—луча€);
	
	мѕроверить.–авно(»м€“естового—луча€, Ќабор“естов.ѕредставление());
	
 онецѕроцедуры // тест»м€Ќабора“естов—овпадает—»менем“естового—луча€

ѕроцедура тестявно”становленное»м€Ќабора“естовЌећен€етс€ѕосле«агрузки“естов»з ласса() Ёкспорт
	
	явно”становленное»м€ = "явно”становленное»м€";
	»м€“естового—луча€ = "‘икстура.“естовый—лучай—ƒвум€”спешными“естами";
	
	Ќабор“естов = —оздатьќбъект("Ќабор“естов");
	Ќабор“естов.”становить»м€(явно”становленное»м€);
	Ќабор“естов.«агрузить»з“естового—луча€(»м€“естового—луча€);
	
	мѕроверить.–авно(явно”становленное»м€, Ќабор“естов.ѕредставление());
	
 онецѕроцедуры

// тесты класса Ќабор“естов нельз€ загружать автоматически, т.к. эти самые тесты и провер€ют корректную работу автозагрузки
‘ункци€ Ќабор“естов() Ёкспорт
	
	—обственное»м€ = "“есты.Ќабор“естов";
	
	// вручную создаем набор тестов класса Ќабор“естов
	Ќабор = —оздатьќбъект("Ќабор“естов");
	Ќабор.”становить»м€(—обственное»м€);
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тестЌабор“естов"));
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тестќшибка—оздани€“еста_≈сли ласса“естаЌе—уществует"));
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тестќшибка—оздани€“еста_≈сли“естовогоћетодаЌе—уществует"));
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тестќшибка«агрузки“естов_ ласса“естового—луча€Ќе—уществует"));
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тестќшибка«агрузки“естов_“естовый лассЌеявл€етс€“естовым—лучаем"));
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тестќшибка«агрузки“естов_ЌетЌиќдного“естовогоћетода"));	
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тест”спешное—озданиеЌабораѕо»мени“естового—луча€"));
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тест»м€Ќабора“естов—овпадает—»менем“естового—луча€"));
	Ќабор.ƒобавить“ест(Ќабор.—оздать“ест(—обственное»м€, "тестявно”становленное»м€Ќабора“естовЌећен€етс€ѕосле«агрузки“естов»з ласса"));
	
	¬озврат Ќабор;
	
 онец‘ункции // Ќабор“естов
