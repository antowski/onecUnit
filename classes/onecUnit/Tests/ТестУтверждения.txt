
Перем мУтверждения;

Процедура Конструктор()
	
КонецПроцедуры // Конструктор

Процедура ПередЗапуском() Экспорт
	мУтверждения = СоздатьОбъект("Утверждения");
КонецПроцедуры // ПередЗапуском

Процедура тестНольРавноНулю() Экспорт
	мУтверждения.Равно(3,3);	
КонецПроцедуры // тестНольРавноНулю

Процедура тестНольНеРавно127() Экспорт
	мУтверждения.НеРавно(3,4);
КонецПроцедуры

Процедура тестВыбрасываетИсключение_МетодБезПараметров() Экспорт
	
	БылВыполнен = СоздатьОбъект("Фикстура.БылВыполнен");
	
	мУтверждения.ВыбрасываетИсключение(БылВыполнен, "СломанныйТест");
	
КонецПроцедуры // тестВыбрасываетИсключение

Процедура тестВыбрасываетИсключение_ПодходитЛюбойТекстИсключения() Экспорт
	
	Математика = СоздатьОбъект("Фикстура.Математика");
	
	сзПараметры = СоздатьОбъект("СписокЗначений");
	сзПараметры.ДобавитьЗначение(1);	// делимое	
	сзПараметры.ДобавитьЗначение(0);	// делитель
	
	мУтверждения.ВыбрасываетИсключение(Математика, "Разделить", сзПараметры);
	
КонецПроцедуры // тестВыбрасываетИсключение_ПодходитЛюбойТекстИсключения

Процедура тестВыбрасываетИсключение_ТекстИсключенияОтличаетсяОтОжидаемого() Экспорт
	
	ГенераторИсключений = СоздатьОбъект("Фикстура.ГенераторИсключений");
	
	сзПараметры = СоздатьОбъект("СписокЗначений");
	сзПараметры.ДобавитьЗначение("неожиданное исключение");
	
	ТекстИсключения = "";
	Попытка
		мУтверждения.ВыбрасываетИсключение(ГенераторИсключений, "СгенерироватьИсключение", сзПараметры, "ожидаемое исключение");
	Исключение
		ТекстИсключения = ОписаниеОшибки();
	КонецПопытки;
	
	//Сообщить(ТекстИсключения);
	
	Если Найти(ТекстИсключения, "ожидали что будет исключение с текстом ""ожидаемое исключение"", а было исключение с текстом") = 0 Тогда
		я().Провален(ТекстИсключения);
	КонецЕсли;
	
КонецПроцедуры // тестВыбрасываетИсключение_ТекстИсключенияОтличаетсяОтОжидаемого

Процедура тестВыбрасываетИсключение_ТекстИсключенияСоответствуетОжидаемому() Экспорт
	
	ГенераторИсключений = СоздатьОбъект("Фикстура.ГенераторИсключений");
	
	сзПараметры = СоздатьОбъект("СписокЗначений");
	сзПараметры.ДобавитьЗначение("ожидаемое исключение");
	
	ТекстИсключения = "";
	мУтверждения.ВыбрасываетИсключение(ГенераторИсключений, "СгенерироватьИсключение", сзПараметры, "ожидаемое исключение");
	
КонецПроцедуры

