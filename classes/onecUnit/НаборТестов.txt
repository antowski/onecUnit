
ѕерем м»м€;
ѕерем м—писок“естов;

ѕроцедура  онструктор()
	м—писок“естов = —оздатьќбъект("—писок«начений");
	м»м€ = "";
 онецѕроцедуры //  онструктор

//{ вспомогательные

ѕроцедура ѕроверить_ ласс—уществует(п»м€ ласса)
	ћета = —оздатьќбъект("MetaInfoClasses");
	≈сли ћета. ласс—уществует(п»м€ ласса) = 0 “огда
		“екст»сключени€ = "Ќе обнаружен класс '" + п»м€ ласса + "'";
		€()._¬ыбросить»скл(“екст»сключени€);
	 онец≈сли;
 онецѕроцедуры // ѕроверить_ ласс—уществует

ѕроцедура ѕроверить_ћетод ласса—уществует(п»м€ ласса, п»м€“еста)
	“естовый—лучай = —оздатьќбъект(п»м€ ласса);
	»нформатор = —оздатьќбъект("»нформатор");
	≈сли »нформатор.ћетод—уществует(“естовый—лучай, п»м€“еста) = 0 “огда
		“екст»сключени€ = "Ќе обнаружен метод '" + п»м€“еста + "' в классе '" + п»м€ ласса + "'";
		€()._¬ыбросить»скл(“екст»сключени€);
	 онец≈сли;
 онецѕроцедуры // ѕроверить_ћетод ласса—уществует

ѕроцедура ѕроверить_ лассявл€етс€“естовым—лучаем(п»м€ ласса)
	
	ќбъект = —оздатьќбъект(п»м€ ласса);
	≈сли ќбъект.явл€етс€ќбъектом("“естовый—лучай") = 0 “огда
		€()._¬ыбросить»скл(" ласс '" + п»м€ ласса + "' не €вл€етс€ наследником класса “естовый—лучай");
	 онец≈сли;
	
 онецѕроцедуры // ѕроверить_ лассявл€етс€“естовым—лучаем

‘ункци€ ѕолучить—писок“естовыхћетодов ласса(п»м€ ласса“естовый—лучай)
	
	сз“естовыећетоды = —оздатьќбъект("—писок«начений");
	
	»нформатор = —оздатьќбъект("»нформатор");
	“естовый—лучай = —оздатьќбъект(п»м€ ласса“естовый—лучай);
	тз“аблицаћетодов = »нформатор.ѕолучить“аблицућетодов(“естовый—лучай);
	
	тз“аблицаћетодов.¬ыбрать—троки();
	ѕока тз“аблицаћетодов.ѕолучить—троку() = 1 ÷икл
		»м€ћетода = тз“аблицаћетодов.NameRus;
		≈сли Ќрег(Ћев(»м€ћетода, 4)) = "тест" “огда
			сз“естовыећетоды.ƒобавить«начение(»м€ћетода);
		 онец≈сли;
	 онец÷икла;
	
	¬озврат сз“естовыећетоды; 
	
 онец‘ункции

//}

//{ интерфейс

ѕроцедура ”становить»м€(п»м€) Ёкспорт
	м»м€ = п»м€;
 онецѕроцедуры

‘ункци€ ѕредставление() Ёкспорт
	¬озврат м»м€;
 онец‘ункции

‘ункци€  оличество“естов() Ёкспорт
	
	¬озврат м—писок“естов.–азмер—писка();
	
 онец‘ункции //  оличество“естов

‘ункци€ ѕолучить—писок“естов() Ёкспорт
	
	сз“есты = —оздатьќбъект("—писок«начений");
	м—писок“естов.¬ыгрузить(сз“есты);
	
	¬озврат сз“есты;
	
 онец‘ункции

ѕроцедура ƒобавить(п“ест) Ёкспорт
	м—писок“естов.ƒобавить«начение(п“ест);
 онецѕроцедуры // ƒобавить

ѕроцедура ¬ыполнить(п–езультат) Ёкспорт
	ƒл€ »нд = 1 ѕо м—писок“естов.–азмер—писка() ÷икл
		“ест = м—писок“естов.ѕолучить«начение(»нд);
		“ест.¬ыполнить(п–езультат);
	 онец÷икла;	
 онецѕроцедуры // ¬ыполнить

‘ункци€ —оздать“ест(п»м€ ласса“естового—луча€, п»м€“еста) Ёкспорт
	
	ѕроверить_ ласс—уществует(п»м€ ласса“естового—луча€);
	ѕроверить_ћетод ласса—уществует(п»м€ ласса“естового—луча€, п»м€“еста);
	
	“ест = —оздатьќбъект(п»м€ ласса“естового—луча€);
	“ест.»нит(п»м€“еста);
	
	¬озврат “ест;
	
 онец‘ункции // —оздать“ест

ѕроцедура «агрузить»з“естового—луча€(п»м€ ласса“естового—луча€) Ёкспорт
	
	ѕроверить_ ласс—уществует(п»м€ ласса“естового—луча€);
	ѕроверить_ лассявл€етс€“естовым—лучаем(п»м€ ласса“естового—луча€);
	
	сз“естовыећетоды = ѕолучить—писок“естовыхћетодов ласса(п»м€ ласса“естового—луча€);
	
	≈сли сз“естовыећетоды.–азмер—писка() = 0 “огда
		€()._¬ыбросить»скл(" ласс '" + п»м€ ласса“естового—луча€ + "' не содержит ни одного тестового метода");
	 онец≈сли;
	
	ƒл€ й = 1 ѕо сз“естовыећетоды.–азмер—писка() ÷икл
		
		»м€“естовогоћетода = сз“естовыећетоды.ѕолучить«начение(й);
		
		“ест = —оздатьќбъект(п»м€ ласса“естового—луча€);
		“ест.»нит(»м€“естовогоћетода);
		
		ƒобавить(“ест);
		
	 онец÷икла;

	≈сли ѕуста€—трока(м»м€) = 1 “огда
		м»м€ = п»м€ ласса“естового—луча€;
	 онец≈сли;
	
 онецѕроцедуры // »з“естового—луча€

//}
